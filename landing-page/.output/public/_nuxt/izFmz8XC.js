import{u as R,a as C,r as l,b as g}from"./D41C2ElN.js";let v=null;const B=()=>{if(v)return v;const s=C(),A=R();console.log("useAuth initialized with config:",{googleClientId:s.public.googleClientId,apiBaseUrl:s.public.apiBaseUrl,googleRedirectUri:s.public.googleRedirectUri});const t=l(!1),n=l(null),U=l(!1),p=l(null),f=l(!1),c=l(!1);let a=null;const r=l(!1),i=new Set,h=l(!1),k=async o=>{try{const e=await $fetch(`${s.public.apiBaseUrl}/v1/auth/profile`,{headers:{Authorization:`Bearer ${o}`}});return n.value=e,t.value=!0,e}catch(e){throw console.error("Error fetching profile:",e),localStorage.removeItem("accessToken"),t.value=!1,n.value=null,e}},b=()=>{h.value=!1,i.clear();const o=s.public.googleClientId,e=s.public.googleRedirectUri,y=`https://accounts.google.com/o/oauth2/v2/auth?client_id=${encodeURIComponent(o)}&redirect_uri=${encodeURIComponent(e)}&scope=${encodeURIComponent("openid email profile")}&response_type=code&access_type=offline&prompt=consent`;console.log("Redirecting to Google OAuth:",y),window.location.href=y},w=()=>{b()},T=()=>{localStorage.removeItem("accessToken"),n.value=null,t.value=!1,c.value=!1,a&&(clearTimeout(a),a=null),r.value=!1,i.clear(),h.value=!1,typeof window<"u"&&window.google&&window.google.accounts.id.disableAutoSelect(),A.push("/")},I=async()=>{if(f.value){console.log("Auth check already in progress, skipping...");return}if(c.value&&t.value){console.log("Auth already checked and user is authenticated, skipping...");return}return a&&clearTimeout(a),new Promise(o=>{a=setTimeout(async()=>{const e=localStorage.getItem("accessToken");if(!e){t.value=!1,n.value=null,c.value=!0,o();return}try{f.value=!0,await k(e),c.value=!0}catch{localStorage.removeItem("accessToken"),t.value=!1,n.value=null,c.value=!0}finally{f.value=!1,o()}},100)})},O=async o=>{if(console.log("=== handleOAuthCallback Debug ==="),console.log("Received code:",o.substring(0,20)+"..."),console.log("Code length:",o.length),i.has(o)){console.log("OAuth code already processed, skipping...",o.substring(0,10)+"...");return}if(r.value){console.log("OAuth processing already in progress, skipping...");return}if(h.value){console.log("OAuth already processed successfully, skipping...");return}try{console.log("Starting OAuth processing..."),r.value=!0,i.add(o),p.value=null,console.log("Handling OAuth callback with code:",o),console.log("Redirect URI:",s.public.googleRedirectUri),console.log("API Base URL:",s.public.apiBaseUrl);const e={code:o,redirectUri:s.public.googleRedirectUri};console.log("Request body:",e);const d=`${s.public.apiBaseUrl}/v1/auth/google`;console.log("Making API call to:",d);const u=await $fetch(d,{method:"POST",headers:{"Content-Type":"application/json"},body:e});if(console.log("Backend response received:",u),u.accessToken)console.log("Access token received, storing..."),localStorage.setItem("accessToken",u.accessToken),console.log("Fetching user profile..."),await k(u.accessToken),c.value=!0,h.value=!0,console.log("OAuth callback completed successfully, redirecting to dashboard..."),A.push("/dashboard");else throw console.error("No access token in response"),new Error("No access token received from backend")}catch(e){throw console.error("OAuth callback error:",e),console.error("Error details:",{message:e.message,status:e.status,statusText:e.statusText,data:e.data}),p.value="Xác thực thất bại. Vui lòng thử lại.",i.delete(o),e}finally{console.log("OAuth processing finished, setting isProcessingOAuth to false"),r.value=!1}},m={isAuthenticated:g(t),user:g(n),isLoading:g(U),error:g(p),isProcessingOAuth:g(r),signInWithGoogle:b,signUpWithGoogle:w,logout:T,checkAuthStatus:I,handleOAuthCallback:O};return v=m,m};export{B as useAuth};
